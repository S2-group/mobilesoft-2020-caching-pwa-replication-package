'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _messenger = require('./messenger');

var _messenger2 = _interopRequireDefault(_messenger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function attachEvent(el, t, h) {
    if (el.addEventListener) {
        el.addEventListener(t, h, false);
    } else if (el.attachEvent) {
        el.attachEvent('on' + t, h);
    }
}

// 暂时不打算提供接口修改
var proxyUrl = '//is.alicdn.com/js/6v/biz/common/store-proxy/store-proxy2.html?iframe_delete=true';

// 分隔符
var spe2c = '-_-';
var spe2p = 'T_T';

// 创建 iframe
if (typeof window.__StoreProxyReady3 == 'undefined') {
    window.__StoreProxyReady3 = false;
}
var ready = window.__StoreProxyReady3;

if (typeof window.__StoreProxyExec3 == 'undefined') {
    window.__StoreProxyExec3 = [];
}
var exec = window.__StoreProxyExec3;

function createIframe(callback) {
    var id = 'localstorage-proxy-ifr-alibabadotcom3';
    var el = document.getElementById(id);

    // 已经存在
    if (el) {
        ready = window.__StoreProxyReady3;
        if (!ready) {
            exec.push(callback);
        } else {
            callback(el);
        }
        return;
    }
    //-------------不存在就创建之

    // 追加 iframe_delete
    if (proxyUrl.indexOf('iframe_delete') === -1) {
        proxyUrl += proxyUrl.indexOf('?') > -1 ? '&' : '?';
        proxyUrl += 'iframe_delete=true';
    }

    // 创建iframe
    el = document.createElement('iframe');
    el.id = id;
    el.src = proxyUrl;

    el.style.display = 'none';
    el.style.visibility = "hidden";

    var time;

    time = setInterval(function () {
        if (el && el.contentWindow && el.Messenger) {
            for (var i = 0, l = exec.length; i < l; i++) {
                exec[i](el);
            }
            exec.length = 0;
            window.__StoreProxyReady3 = ready = true;

            clearInterval(time);
            time = 0;
        }
    }, 50);

    attachEvent(el, "load", function () {
        if (time) {
            clearInterval(time);
            time = 0;
        }

        if (window.__StoreProxyReady3) {
            ready = true;
            return;
        }

        for (var i = 0, l = exec.length; i < l; i++) {
            exec[i](el);
        }
        exec.length = 0;
        window.__StoreProxyReady3 = ready = true;
    });

    exec.push(callback);
    document.body.appendChild(el);
}

// 获取 messenger 及 消息构成
var messenger;
var cbs = {};
var uid = 0;
function getMessenger(callback) {
    callback = callback || function () {};

    if (messenger) {
        callback(messenger);
        return;
    }
    // 注册
    createIframe(function (el) {
        if (messenger) {
            callback(messenger);
            return;
        }
        messenger = new _messenger2['default']('parent', 'store-proxy');
        messenger.addTarget(el.contentWindow, 'proxy');
        // 监听接口
        messenger.listen(function (msg) {
            parseMsg(msg);
        });
        callback(messenger);
    });
}

function getMsg(op, name, value, callback) {
    var msg = [op, name, value];
    if (op != 'set') {
        callback = value;
        msg.pop();
        msg.push(uid++);
    }

    msg = msg.join(spe2c);
    //cbs[msg] = [op, callback];
    cbs[msg] = callback;

    return msg;
}
function parseMsg(msg) {
    var err, data;
    var tmp = msg.split(spe2p);

    msg = tmp[0];
    err = tmp[1] || null;
    data = tmp[2] || undefined;

    if (cbs[msg]) {
        cbs[msg](err, data);
    }
}

// 默认加载
// getMessenger();


exports['default'] = {
    // 根据键名获取存储的值
    get: function get(name) {
        var options, callback;

        if (arguments.length > 1) {
            if (isFunction(arguments[arguments.length - 1])) {
                callback = arguments[arguments.length - 1];
            }

            if (arguments[1] !== callback) {
                options = arguments[1];
            }
        }
        /* else {
         throw new Error('Parameters are not legitimate in "storeProxy2.get"');
         }*/

        // 发信息
        getMessenger(function (messenger) {
            messenger.targets['proxy'].send(getMsg('get', name, function (err, data) {
                // 检验 value
                if (!err && options && options.filter) {
                    data = options.filter(data);
                }

                callback(err, data);
            }));
        });
    },

    // 设置数据
    set: function set(name, value) {
        var options, callback;

        if (arguments.length > 2) {
            if (isFunction(arguments[arguments.length - 1])) {
                callback = arguments[arguments.length - 1];
            }

            if (arguments[2] !== callback) {
                options = arguments[2];
            }
        }
        /* else {
         throw new Error('Parameters are not legitimate in "storeProxy2.set"');
         }*/

        // 检验 value
        if (options && options.filter) {
            value = options.filter(value);
        }

        if (!isString(value)) {
            throw new Error('value must be String in "storeProxy2.set"!');
        }

        // 发信息
        getMessenger(function (messenger) {
            messenger.targets['proxy'].send(getMsg('set', name, value, callback));
        });
    },

    // 移除指定键名的存储
    remove: function remove(name, callback) {
        // 发信息
        getMessenger(function (messenger) {
            messenger.targets['proxy'].send(getMsg('remove', name, callback));
        });
    }
};

//-----helper

function isFunction(val) {
    return Object.prototype.toString.call(val) === '[object Function]';
}

function isString(val) {
    return Object.prototype.toString.call(val) === '[object String]';
}
module.exports = exports['default'];


//////////////////
// WEBPACK FOOTER
// ./node_modules/_@alife_bc-store-proxy@1.0.4@@alife/bc-store-proxy/lib/index.js
// module id = 6
// module chunks = 0